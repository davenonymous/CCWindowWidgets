shell.run("/rom/apis/class")
shell.run("/rom/apis/classes/GUIx/Widgets/WidgetScrollBar")

WidgetScrollPanel = class(WidgetPanel, function(widget, parent, x, y, w, h)
	WidgetPanel.init(widget, parent, x, y, w, h)
	widget.id = "scrollpanel"

	widget.offsetY = 0
	widget.stepSize = 1

	widget.area = WidgetPanel(widget, 1, 1, w-1, h)
	widget:add(widget.area)

	-- Vertical
	widget.up_button = WidgetButton(widget, w, 1, 1, 1)	
	widget.up_button:setLabel("^")
	widget.up_button:on("click", function()
		widget:scrollUp(widget.stepSize)
		widget.vertical_bar:setLevel(widget.offsetY)		
	end)
	widget.up_button:setColors(colors.white, colors.green)

	widget.down_button = WidgetButton(widget, w, h, 1, 1)	
	widget.down_button:setLabel(",")
	widget.down_button:on("click", function()
		widget:scrollDown(widget.stepSize)
		widget.vertical_bar:setLevel(widget.offsetY)		
	end)
	widget.down_button:setColors(colors.white, colors.green)

	widget.vertical_bar = WidgetScrollBar(widget, w, 2, 1, h-2)
	widget.vertical_bar:setColors(colors.white, colors.gray)

	widget:add(widget.vertical_bar, true)
	widget:add(widget.up_button, true)
	widget:add(widget.down_button, true)

	widget.up_button.id = "__scrollButton"
	widget.down_button.id = "__scrollButton"

	widget.area:on("added_element", function(element)
		local innerWidth, innerHeight = widget.area:getInnerSize()
		widget.vertical_bar:setScrollSteps(innerHeight-widget.h-1)
	end)
end)

	-- Overridden
function WidgetScrollPanel:setColors(fg, bg)
	self.bg = bg
	self.fg = fg
	self.area.bg = bg
	self.area.fg = fg
end

function WidgetScrollPanel:customDraw()
	self.area:draw()

	self.vertical_bar:draw()
	self.up_button:draw()
	self.down_button:draw()
end

function WidgetScrollPanel:scrollUp(_amount)	
	local amount = _amount or 1
	-- Don't go below zero
	if(self.offsetY - amount < 0) then
		amount = self.offsetY
	end

	if(amount > 0) then
		self.offsetY = self.offsetY - amount
		for i,element in ipairs(self.area.elements) do
			if(element.setPosition ~= nil and element.id ~= "__scrollButton") then
				element:setPosition(element.x, element.y + amount)
			end
		end

		self:draw()
	end
end

function WidgetScrollPanel:scrollDown(_amount)
	local amount = _amount or 1
	local innerWidth, innerHeight = self.area:getInnerSize()
	local maxOffset = innerHeight - self.h
	-- Don't go above the inner height minus the panels height,
	-- i.e. don't allow scrolling into empty area
	if(self.offsetY + amount > maxOffset) then
		amount = maxOffset - self.offsetY
	end

	--print("MaxOffset=" .. maxOffset .. ", innerHeight=" .. innerHeight .. ", amount=" .. amount)

	if(amount > 0) then
		self.offsetY = self.offsetY + amount
		local amount = _amount or 1
		for i,element in ipairs(self.area.elements) do
			if(element.setPosition ~= nil and element.id ~= "__scrollButton") then
				element:setPosition(element.x, element.y - amount)
			end
		end

		self:draw()
	end
end